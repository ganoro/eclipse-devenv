<project name="devenv production" default="dist" basedir=".">
    <description>
        building the devenv for soho os dev people
    </description>
    
    
    <macrodef name="propertycopy">
      <attribute name="name"/>
      <attribute name="from"/>
      <sequential>
         <property name="@{name}" value="${@{from}}"/>
      </sequential>
    </macrodef>
    
  <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
    
    
  <!-- set global properties for this build -->
  <property file="build.properties" /> 
  <property environment="env"/>
  <property name="result" location="result"/>
  <property name="version" value="v1"/>
  <property name="workspace" location="workspace" />
  <property name="cache" location="cache" />
  <property name="os" value="${env.OPERATING_SYSTEM}" />
  <propertycopy name="resource" from="org.eclipse.php.${os}" />
  
  <target name="package.check">
	<condition property="package.win">
   		<or>
	               	<equals arg1="win.x86" arg2="${os}"/>
	               	<equals arg1="win.x86_64" arg2="${os}"/>
	        </or>
 	</condition>
  </target>

  <target name="init">
  		<echo message="os: ${os}" />
  		<echo message="env: ${env.OPERATING_SYSTEM}" />
  		<echo message="resource: ${resource}" />
  		<delete dir="${workspace}" failonerror="false" />
  		<mkdir dir="${workspace}"></mkdir>
  		<mkdir dir="${cache}"></mkdir>
  		<mkdir dir="${result}"></mkdir>
  		
	    	<!-- Create the time stamp -->
	    	<tstamp/>
	    	<get verbose="true" src="${org.eclipse.php.url}${org.eclipse.php.linux.x86_64}" dest="${cache}/${org.eclipse.php.linux.x86_64}" usetimestamp="true"/>
 		<get verbose="true" src="${org.eclipse.php.url}${resource}" dest="${cache}/${resource}" usetimestamp="true"/>
		
  </target>

  <target name="prepareProduct">
  		<echo message="prepare product" />
  		<mkdir dir="${workspace}/product"></mkdir>
  		<files includes="${workspace}/${os}/eclipse-php/plugins/org.zend.php_3.*.jar" id="product.file" />
		<property name="product.jarfile" value="${toString:product.file}" />
  		<echo message="Jar File:  ${product.jarfile}" />
		<unzip src="${product.jarfile}" dest="${workspace}/product" />
		<copy file="plugin_customization.ini" tofile="${workspace}/product/plugin_customization.ini" overwrite="true"/>
		<copy file="splash.bmp" tofile="${workspace}/product/splash.bmp" overwrite="true"/>
		<jar destfile="${product.jarfile}" basedir="${workspace}/product" update="true"/>
  </target>


  <target name="dist" depends="init" description="generate the distribution" >
		<!--  This is the host target eclipse platform, change according to target -->
		<mkdir dir="${workspace}/host"></mkdir>
		<untar src="${cache}/${org.eclipse.php.linux.x86_64}" dest="${workspace}/host/" compression="gzip"/>
		<exec executable="chmod">
    		<arg value="777"/>
			<arg value="${workspace}/host/eclipse-php/eclipse-php"/>    		
		</exec>
		
		<!--  unzip to the os package  -->
		<mkdir dir="${workspace}/${os}"></mkdir>
		<antcall target="unpack.nonwin" />
		<antcall target="unpack.win" />
		
		<antcall target="prepareProduct" />
   		<antcall target="installFeatures">
    			<param name="destination" value="${workspace}/${os}/eclipse-php/"/>
		</antcall>

 		<files includes="${workspace}/${os}/eclipse-php/plugins/org.phpsrc.eclipse.pti.library.pear*" id="pear.dir" > <type type="dir"/> </files>
                <property name="pear_plugin.dir" value="${toString:pear.dir}" />
		<copy todir="${pear_plugin.dir}/php/library/PEAR/PHP/CodeSniffer/Standards/PEAR" overwrite="true">
    			<fileset dir="PEAR"/>
  		</copy>


  		<zip destfile="${result}/eclipse-php-${os}-${version}.zip" basedir="${workspace}/${os}" />
  </target>
  
  <target name="unpack.nonwin" depends="package.check" unless="package.win">
  	<untar src="${cache}/${resource}" dest="${workspace}/${os}" compression="gzip"/>
  </target>
  
  <target name="unpack.win" depends="package.check" if="package.win">
  	<unzip src="${cache}/${resource}" dest="${workspace}/${os}"/>
  </target>
  

	<target name="installFeatures">
		<antcall target="installIUs">
    		<param name="repo" value="${org.eclipse.url}"/>
    		<param name="installius" value="${org.eclipse.installIUs}"/>
  		</antcall>

		<antcall target="installIUs">
    		<param name="repo" value="${org.eclipse.svn.url}"/>
    		<param name="installius" value="${org.eclipse.svn.installIUs}"/>
  		</antcall>

		<antcall target="installIUs">
    		<param name="repo" value="${org.eclipse.svn.connector.url}"/>
    		<param name="installius" value="${org.eclipse.svn.connector.installIUs}"/>
  		</antcall>

		<antcall target="installIUs">
    		<param name="repo" value="${org.eclipse.php.ext.url}"/>
    		<param name="installius" value="${org.eclipse.php.ext.installIUs}"/>
  		</antcall>

		<antcall target="installIUs">
    		<param name="repo" value="${org.eclipse.php.ect.url}"/>
    		<param name="installius" value="${org.eclipse.php.ect.installIUs}"/>
  		</antcall>

		<antcall target="installIUs">
    		<param name="repo" value="${org.eclipse.php.pti.url}"/>
    		<param name="installius" value="${org.eclipse.php.pti.installIUs}"/>
  		</antcall>

		<antcall target="installIUs">
    		<param name="repo" value="${com.unfuddle.mylyn.url}"/>
    		<param name="installius" value="${com.unfuddle.mylyn.installIUs}"/>
  		</antcall>
  		
  
		<antcall target="installIUs">
    		<param name="repo" value="${ru.zencoding.eclipse.url}"/>
    		<param name="installius" value="${ru.zencoding.eclipse.installIUs}"/>
  		</antcall>
  		
	</target>

	<target name="installIUs">
		<echo message="Installing new feature to ${destination}" />
		<echo message="  ${workspace}/host/eclipse-php/eclipse-php " />
		<echo message="  -repository ${repo}" />
		<echo message="  -installIUs ${installius}" />
		<echo message="  -data ${workspace}/host/workspace" />
		
		<exec command='${workspace}/host/eclipse-php/eclipse-php -application org.eclipse.equinox.p2.director -noSplash -data ${workspace}/host/workspace -repository ${repo} -installIUs "${installius}" -destination ${destination}' />
	</target>
  
</project>

